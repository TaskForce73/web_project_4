!function(){"use strict";var e={730:function(e,t,s){e.exports=s.p+"2f8a4cd99a9a7a10b10b.png"},14:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,s),i.exports}s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.p="",function(){var e={};function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}s.r(e);class r{constructor(e,s,r){let{data:n,handleCardClick:i,handleDeleteButton:o,handleLikeButton:a}=e;t(this,"_getTemplate",(()=>(this._element=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._element))),t(this,"removeCard",(()=>{this._element.remove(),this._element=null})),t(this,"_setEventListeners",(()=>{this._elementBin=this._element.querySelector(".element__bin"),this._elementBin.addEventListener("click",(()=>{this._handleDeleteButton(this._id)})),this._likeButton=this._element.querySelector(".element__button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(this._id)})),this._elementPicture.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))})),t(this,"generateCard",(()=>(this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".element__button"),this._elementPicture=this._element.querySelector(".element__picture"),this._setEventListeners(),this._elementPicture.src=this._link,this._elementPicture.alt="Photo of ".concat(this._name),this._element.querySelector(".element__header").textContent=this._name,this._ownerId!==this._userId&&(this._elementBin=this._element.querySelector(".element__bin").style.display="none"),this._element.querySelector(".element__button-counter").textContent=this._likes.length,this.isLiked&&this.likeCard(this._likes),this._element))),this._name=n.name,this._link=n.link,this._cardSelector=r,this._handleCardClick=i,this._handleDeleteButton=o,this._handleLikeButton=a,this._id=n._id,this._ownerId=n.owner._id,this._userId=s,this._likes=n.likes}likeCard(e){this._likes=e,this._element.querySelector(".element__button-counter").textContent=this._likes.length,this._element.querySelector(".element__button").classList.toggle("element__button_active")}isLiked(){return this._likes.some((e=>e._id===this._userId))}}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class i{constructor(e){n(this,"close",(()=>{this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscapeClose)})),n(this,"_handleEscapeClose",(e=>{"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscapeClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_open")||e.target.classList.contains("popup__close"))&&this.close()}))}}class o extends i{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._submitButton=this._popup.querySelector(".popup__button")}_getInputValues(){const e={};return[...this._form.querySelectorAll(".popup__input")].forEach((t=>{e[t.name]=t.value})),e}changeButtonText(){this._submitButton.textContent="Saving..."}showButtonText(){this._submitButton.textContent="Save"}setEventListeners(){this._form.addEventListener("submit",(e=>{this.changeButtonText(),e.preventDefault(),this._handleSubmit(this._getInputValues()),this._form.reset(),this.close()})),super.setEventListeners()}close(){this.showButtonText(),super.close()}}class a{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}render(){this._items.forEach((e=>{this._renderer(e)}))}}function l(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class c{constructor(e,t){l(this,"_showInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)})),l(this,"_hideInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""})),l(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),l(this,"_hasInvalidInput",(e=>Array.from(e).some((e=>!e.validity.valid)))),l(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputsList)?(this._elementButton.classList.add(this._inactiveButtonClass),this._elementButton.setAttribute("disabled",!0)):(this._elementButton.classList.remove(this._inactiveButtonClass),this._elementButton.removeAttribute("disabled"))})),l(this,"_setEventListeners",(()=>{this._inputsList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._toggleButtonState(),this._inputsList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))})),l(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()})),l(this,"resetValidation",(()=>{this._inputsList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._elementButton=this._formElement.querySelector(this._submitButtonSelector)}}const h=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch(console.log);var u=s(14),_=s(730);const d=document.querySelector(".profile__plus"),p=document.querySelector(".popup__form"),m=document.querySelector(".profile__edit"),f=document.querySelector(".popup__form_second"),v=document.querySelector(".elements__list"),b=document.querySelector(".popup__input-name"),E=document.querySelector(".popup__input-about"),S=document.querySelector(".profile__overlay"),y=document.querySelector(".popup__form_avatar");let g;document.getElementById("around-the-us").src=u,document.getElementById("profile-image").src=_;const C=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return h("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return h("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}createCard(e){let{name:t,link:s}=e;return h("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return h("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers})}likeCard(e){return h("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers})}dislikeCard(e){return h("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers})}changeAvatar(e){return h("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"32b9efa0-6f35-4afe-975e-e3a6be43cfcb","Content-Type":"application/json"}}),k=new c(e.default,f);k.enableValidation();const L=new c(e.default,p);L.enableValidation();const B=new c(e.default,y);B.enableValidation();const q=new class extends i{setAction(e){this._submitHandler=e,this._form=this._popup.querySelector(".popup__form")}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._form),this.close()})),super.setEventListeners()}}(".popup_card_remover");q.setEventListeners();const I=new class extends i{open(e,t){const s=this._popup.querySelector(".popup__image");this._popup.querySelector(".popup__description").textContent=e,s.alt="Photo of ".concat(e),s.src=t,super.open()}}(".popup_big_image");I.setEventListeners();const w=new o(".popup_profile_adder",(e=>{T.setUserInfo(e)}));w.setEventListeners();const x=new o(".popup_profile_changer",(e=>{C.changeAvatar(e.avatar).then((e=>{T.setUserAvatar({avatar:e.avatar})})).catch((e=>console.log(e)))}));x.setEventListeners();const U=new o(".popup_card_publisher",(e=>{C.createCard({name:e.description,link:e.link}).then((e=>{P(e)}))}));U.setEventListeners();const P=e=>{const t=function(e){const t=new r({data:e,handleCardClick:(e,t)=>{I.open(e,t)},handleDeleteButton:e=>{q.open(),q.setAction((()=>{C.deleteCard(e).then((e=>{console.log("This card was deleted",e),t.removeCard()}))}))},handleLikeButton:e=>{t.isLiked()?C.dislikeCard(e).then((e=>{t.likeCard(e.likes)})):C.likeCard(e).then((e=>{t.likeCard(e.likes)}))}},g,"#card-template");return t.generateCard()}(e);v.prepend(t)};C.getUserInfo().then((e=>{g=e._id,T.setUserInfo({name:e.name,about:e.about})})),C.getInitialCards().then((e=>{console.log("res",e),new a({items:e,renderer:P},".elements__list").render()}));const T=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s,avatarSelector:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}getUserAvatar(){return{avatar:this._avatar.src}}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({profileNameSelector:".profile__author",profileJobSelector:".profile__text",avatarSelector:".profile__image"});m.addEventListener("click",(()=>{L.resetValidation(p),function(){const e=T.getUserInfo();b.value=e.name,E.value=e.job}(),w.open()})),d.addEventListener("click",(()=>{k.resetValidation(f),U.open()})),S.addEventListener("click",(()=>{B.resetValidation(y),x.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,