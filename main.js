!function(){"use strict";var e={730:function(e,t,s){e.exports=s.p+"2f8a4cd99a9a7a10b10b.png"},14:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,s),i.exports}s.p="",function(){function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,r){let{data:n,handleCardClick:i,handleDeleteButton:o,handleLikeButton:a}=t;e(this,"_getTemplate",(()=>(this._element=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._element))),e(this,"removeCard",(()=>{this._element.remove(),this._element=null})),e(this,"_setEventListeners",(()=>{this._elementBin=this._element.querySelector(".element__bin"),this._elementBin.addEventListener("click",(()=>{this._handleDeleteButton(this._id)})),this._likeButton=this._element.querySelector(".element__button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(this._id)})),this._elementPicture.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))})),e(this,"generateCard",(()=>(this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".element__button"),this._elementPicture=this._element.querySelector(".element__picture"),this._setEventListeners(),this._elementPicture.src=this._link,this._elementPicture.alt="Photo of ".concat(this._name),this._element.querySelector(".element__header").textContent=this._name,this._ownerId!==this._userId&&(this._elementBin=this._element.querySelector(".element__bin").style.display="none"),this._element.querySelector(".element__button-counter").textContent=this._likes.length,this.isLiked&&this.likeCard(this._likes),this._element))),this._name=n.name,this._link=n.link,this._cardSelector=r,this._handleCardClick=i,this._handleDeleteButton=o,this._handleLikeButton=a,this._id=n._id,this._ownerId=n.owner._id,this._userId=s,this._likes=n.likes}likeCard(e){this._likes=e,this._element.querySelector(".element__button-counter").textContent=this._likes.length,this._element.querySelector(".element__button").classList.toggle("element__button_active")}isLiked(){return this._likes.some((e=>e._id===this._userId))}}function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class n{constructor(e){r(this,"close",(()=>{this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscapeClose)})),r(this,"_handleEscapeClose",(e=>{"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscapeClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_open")||e.target.classList.contains("popup__close"))&&this.close()}))}}class i extends n{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form")}_getInputValues(){const e={};return[...this._form.querySelectorAll(".popup__input")].forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._form.reset(),super.close()}}class o{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}render(){this._items.forEach((e=>{this._renderer(e)}))}}function a(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class l{constructor(e,t){a(this,"_showInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)})),a(this,"_hideInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""})),a(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),a(this,"_hasInvalidInput",(e=>Array.from(e).some((e=>!e.validity.valid)))),a(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputsList)?(this._elementButton.classList.add(this._inactiveButtonClass),this._elementButton.setAttribute("disabled",!0)):(this._elementButton.classList.remove(this._inactiveButtonClass),this._elementButton.removeAttribute("disabled"))})),a(this,"_setEventListeners",(()=>{this._inputsList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._toggleButtonState(),this._inputsList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))})),a(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()})),a(this,"resetValidation",(()=>{this._inputsList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._elementButton=this._formElement.querySelector(this._submitButtonSelector),this._elementButtonText=this._formElement.querySelector(this._submitButtonSelector).textContent}showSaving(e){const t=this._formElement.querySelector(this._submitButtonSelector);e?(t.textContent="Saving...",t.disabled=!0):(t.textContent=this._submitButtonText,t.disabled=!1)}}const c={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},u=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch(console.log),_=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return u("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return u("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}createCard(e){let{name:t,link:s}=e;return u("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return u("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers})}likeCard(e){return u("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers})}dislikeCard(e){return u("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers})}changeAvatar(e){return u("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"32b9efa0-6f35-4afe-975e-e3a6be43cfcb","Content-Type":"application/json"}});var h=s(14),d=s(730);const p=document.querySelector(".profile__plus"),m=document.querySelector(".popup__form"),v=document.querySelector(".profile__edit"),f=document.querySelector(".popup__form_second"),b=document.querySelector(".elements__list"),E=document.querySelector(".popup__input-name"),S=document.querySelector(".popup__input-about"),y=document.querySelector(".profile__overlay"),C=document.querySelector(".popup__form_avatar");let g;document.getElementById("around-the-us").src=h,document.getElementById("profile-image").src=d;const k=new l(c,f);k.enableValidation();const L=new l(c,m);L.enableValidation();const B=new l(c,C);B.enableValidation();const q=new class extends n{setAction(e){this._submitHandler=e,this._form=this._popup.querySelector(".popup__form")}_getInputValues(){const e={};return[...this._form.querySelectorAll(".popup__input")].forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}}(".popup_card_remover");q.setEventListeners();const I=new class extends n{open(e,t){const s=this._popup.querySelector(".popup__image");this._popup.querySelector(".popup__description").textContent=e,s.alt="Photo of ".concat(e),s.src=t,super.open()}}(".popup_big_image");I.setEventListeners();const x=new i(".popup_profile_adder",(e=>{V.setUserInfo(e)}));x.setEventListeners();const w=new i(".popup_profile_changer",(e=>{_.changeAvatar(e.avatar).then((e=>{V.setUserAvatar({avatar:e.avatar}),w.close()})).catch((e=>console.log(e)))}));w.setEventListeners();const U=new i(".popup_card_publisher",(e=>{_.createCard({name:e.description,link:e.link}).then((e=>{A(e)}))}));U.setEventListeners();const A=e=>{const s=function(e){const s=new t({data:e,handleCardClick:(e,t)=>{I.open(e,t)},handleDeleteButton:e=>{q.open(),q.setAction((()=>{_.deleteCard(e).then((e=>{console.log("This card was deleted",e),s.removeCard()}))}))},handleLikeButton:e=>{s.isLiked()?_.dislikeCard(e).then((e=>{s.likeCard(e.likes)})):_.likeCard(e).then((e=>{s.likeCard(e.likes)}))}},g,"#card-template");return s.generateCard()}(e);b.prepend(s)};_.getUserInfo().then((e=>{g=e._id,V.setUserInfo({name:e.name,about:e.about})})),_.getInitialCards().then((e=>{console.log("res",e),new o({items:e,renderer:A},".elements__list").render()}));const V=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s,avatarSelector:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}getUserAvatar(){return{avatar:this._avatar.src}}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({profileNameSelector:".profile__author",profileJobSelector:".profile__text",avatarSelector:".profile__image"});v.addEventListener("click",(()=>{L.resetValidation(m),function(){const e=V.getUserInfo();E.value=e.name,S.value=e.job}(),x.open()})),p.addEventListener("click",(()=>{k.resetValidation(f),U.open()})),y.addEventListener("click",(()=>{B.resetValidation(C),w.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,