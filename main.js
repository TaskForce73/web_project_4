!function(){"use strict";var e={730:function(e,t,s){e.exports=s.p+"2f8a4cd99a9a7a10b10b.png"},14:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(n){var r=t[n];if(void 0!==r)return r.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,s),i.exports}s.p="",function(){function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,n){let{data:r,handleCardClick:i,handleDeleteButton:o,handleLikeButton:a}=t;e(this,"_getTemplate",(()=>(this._element=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._element))),e(this,"removeCard",(()=>{this._element.remove(),this._element=null})),e(this,"_setEventListeners",(()=>{this._elementBin=this._element.querySelector(".element__bin"),this._elementBin.addEventListener("click",(()=>{this._handleDeleteButton(this._getId())})),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(this._likeButton,this._getId())})),this._elementPicture.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))})),e(this,"generateCard",(()=>(this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".element__button"),this._elementPicture=this._element.querySelector(".element__picture"),this._counter=this._element.querySelector(".element__button-counter"),this._setEventListeners(),this._elementPicture.src=this._link,this._elementPicture.alt="Photo of ".concat(this._name),this._element.querySelector(".element__header").textContent=this._name,this._counter.textContent=this._likesAmount,this._handleCardLikes(),this._deleteButton(),this._element))),this._name=r.name,this._link=r.link,this._cardSelector=n,this._handleCardClick=i,this._handleDeleteButton=o,this._handleLikeButton=a,this._id=r._id,this._owner=r.owner,this._userId=s,this._likes=r.likes,this._likesAmount=r.likes.length}_getId(){return this._id}_deleteButton(){const e=this._element.querySelector(".element__bin");this._owner._id!==this._userId&&e.remove()}toggleLikeButton(e){e.classList.toggle("element__button_active")}displayTotalLikes(e){this._counter.textContent=e}_handleCardLikes(){Array.from(this._likes).forEach((e=>{e._id===this._userId&&this._likeButton.classList.add("element__button_active")}))}}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e){n(this,"close",(()=>{this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscapeClose)})),n(this,"_handleEscapeClose",(e=>{"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscapeClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_open")||e.target.classList.contains("popup__close"))&&this.close()}))}}class i extends r{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._submitButton=this._popup.querySelector(".popup__button"),this._inputs=[...this._form.querySelectorAll(".popup__input")]}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}changeButtonText(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Saving...";this._submitButton.textContent=e}setEventListeners(){this._form.addEventListener("submit",(e=>{this.changeButtonText(),e.preventDefault(),this._handleSubmit(this._getInputValues())})),super.setEventListeners()}close(){this._form.reset(),super.close()}}function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class a{constructor(e,t){o(this,"_showInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)})),o(this,"_hideInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""})),o(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),o(this,"_hasInvalidInput",(e=>Array.from(e).some((e=>!e.validity.valid)))),o(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputsList)?(this._elementButton.classList.add(this._inactiveButtonClass),this._elementButton.setAttribute("disabled",!0)):(this._elementButton.classList.remove(this._inactiveButtonClass),this._elementButton.removeAttribute("disabled"))})),o(this,"_setEventListeners",(()=>{this._inputsList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._toggleButtonState(),this._inputsList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))})),o(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()})),o(this,"resetValidation",(()=>{this._inputsList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._elementButton=this._formElement.querySelector(this._submitButtonSelector)}}var l=s(14),c=s(730);const h=document.querySelector(".profile__plus"),u=document.querySelector(".popup__form"),_=document.querySelector(".profile__edit"),p=document.querySelector(".popup__form_second"),d=document.querySelector(".popup__input-name"),m=document.querySelector(".popup__input-about"),f=document.querySelector(".profile__overlay"),v=document.querySelector(".popup__form_avatar");document.getElementById("around-the-us").src=l,document.getElementById("profile-image").src=c;const b=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}createCard(e){let{name:t,link:s}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}dislikeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}changeAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"32b9efa0-6f35-4afe-975e-e3a6be43cfcb","Content-Type":"application/json"}}),g={};var E;E={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(E.formSelector)).forEach((e=>{const t=new a(E,e),s=e.getAttribute("name");g[s]=t,t.enableValidation()}));const S=new class extends r{setAction(e){this._submitHandler=e}setEventListeners(){this._form=this._popup.querySelector(".popup__form"),this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._form)})),super.setEventListeners()}}(".popup_card_remover");S.setEventListeners();const k=new class extends r{open(e,t){this._image=this._popup.querySelector(".popup__image"),this._caption=this._popup.querySelector(".popup__description"),this._caption.textContent=e,this._image.alt="Photo of ".concat(e),this._image.src=t,super.open()}}(".popup_big_image");k.setEventListeners();const y=new i(".popup_profile_adder",(e=>{I.setUserInfo(e),y.close()}));y.setEventListeners();const L=new i(".popup_profile_changer",(e=>{b.changeAvatar(e.avatar).then((e=>{I.setUserAvatar({avatar:e.avatar}),L.close()})).catch((e=>console.log(e))).finally((e=>{L.changeButtonText("Save")}))}));L.setEventListeners();const C=new i(".popup_card_publisher",(e=>{b.createCard({name:e.description,link:e.link}).then((e=>{B.addItem(q(e)),C.close()})).catch((e=>console.log(e))).finally((e=>{C.changeButtonText("Save")}))}));C.setEventListeners(),Promise.all([b.getInitialCards(),b.getUserInfo()]).then((e=>{let[t,s]=e;I.setUserInfo({name:s.name,about:s.about}),B.render(t)})).catch((e=>{console.log(e)})).finally((e=>{y.changeButtonText("Save")}));const B=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}render(e){e.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{B.addItem(q(e))}},".elements__list"),I=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s,avatarSelector:n}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(n)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}getUserAvatar(){return{avatar:this._avatar.src}}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({profileNameSelector:".profile__author",profileJobSelector:".profile__text",avatarSelector:".profile__image"});function q(e){const s=new t({data:e,handleCardClick:(e,t)=>{k.open(e,t)},handleDeleteButton:e=>{S.open(e),S.setAction((()=>{b.deleteCard(e).then((()=>{s.removeCard(),S.close()})).catch((e=>console.log(e)))}))},handleLikeButton:(e,t)=>{e.classList.contains("element__button_active")?b.dislikeCard(t).then((t=>{s.displayTotalLikes(t.likes.length),s.toggleLikeButton(e)})).catch((e=>console.log(e))):b.likeCard(t).then((t=>{s.displayTotalLikes(t.likes.length),s.toggleLikeButton(e)})).catch((e=>console.log(e)))}},void 0,"#card-template");return s.generateCard()}_.addEventListener("click",(()=>{g[u.getAttribute("name")].resetValidation(),function(){const e=I.getUserInfo();d.value=e.name,m.value=e.job}(),y.open()})),h.addEventListener("click",(()=>{g[p.getAttribute("name")].resetValidation(),C.open()})),f.addEventListener("click",(()=>{g[v.getAttribute("name")].resetValidation(),L.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S3BKLGlCQUFpQkMsTUFFdkJnSSxPQUFPQyxHQUFRQyxRQUFRQyxJQUFJRixLQUU5QmhELEVBQ0d1QixTQUFTNUQsR0FDVG1ELE1BQU1SLElBQ0w0RCxFQUFLaEosa0JBQWtCb0YsRUFBSTNGLE1BQU1DLFFBQ2pDc0osRUFBS3BKLGlCQUFpQkMsTUFFdkJnSSxPQUFPQyxHQUFRQyxRQUFRQyxJQUFJRixZQXJJcENyRixFQTBJQSxrQkFHRixPQURvQnVHLEVBQUtZLGVBVTNCdkYsRUFBa0JyRyxpQkFBaUIsU0FBUyxLQUMxQzBJLEVBQWV0QyxFQUFZMkMsYUFBYSxTQUFTOEMsa0JBUG5ELFdBQ0UsTUFBTXBCLEVBQVdoQixFQUFTNUIsY0FDMUJ0QixFQUFpQnpDLE1BQVEyRyxFQUFTdkosS0FDbENzRixFQUFrQjFDLE1BQVEyRyxFQUFTZ0IsSUFLbkNLLEdBQ0F0QyxFQUFVekcsVUFHWm9ELEVBQWtCbkcsaUJBQWlCLFNBQVMsS0FDMUMwSSxFQUFlcEMsRUFBU3lDLGFBQWEsU0FBUzhDLGtCQUM5QzNCLEVBQWFuSCxVQUdmMEQsRUFBaUJ6RyxpQkFBaUIsU0FBUyxLQUN6QzBJLEVBQWVoQyxFQUFXcUMsYUFBYSxTQUFTOEMsa0JBQ2hEbEMsRUFBZ0I1RyxVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Gcm9tVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoU3VibWl0LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHsgZGF0YSwgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVEZWxldGVCdXR0b24sIGhhbmRsZUxpa2VCdXR0b24gfSxcbiAgICB1c2VySWQsXG4gICAgY2FyZFNlbGVjdG9yXG4gICkge1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUJ1dHRvbiA9IGhhbmRsZURlbGV0ZUJ1dHRvbjtcbiAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uID0gaGFuZGxlTGlrZUJ1dHRvbjtcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xuICAgIHRoaXMuX293bmVyID0gZGF0YS5vd25lcjtcbiAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xuICAgIHRoaXMuX2xpa2VzQW1vdW50ID0gZGF0YS5saWtlcy5sZW5ndGg7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGUgPSAoKSA9PiB7XG4gICAgdGhpcy5fZWxlbWVudCA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRcIilcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH07XG5cbiAgcmVtb3ZlQ2FyZCA9ICgpID0+IHtcbiAgICBjb25zdCBjYXJkID0gdGhpcy5fZWxlbWVudDtcbiAgICBjYXJkLnJlbW92ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICB9O1xuXG4gIF9nZXRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICBfZGVsZXRlQnV0dG9uKCkge1xuICAgIGNvbnN0IGNhcmRUcmFzaEJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19iaW5cIik7IFxuICAgIGlmICh0aGlzLl9vd25lci5faWQgIT09IHRoaXMuX3VzZXJJZCkge1xuICAgICAgY2FyZFRyYXNoQnV0dG9uLnJlbW92ZSgpO1xuICAgIH1cbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycyA9ICgpID0+IHtcbiAgICB0aGlzLl9lbGVtZW50QmluID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2JpblwiKTtcbiAgICB0aGlzLl9lbGVtZW50QmluLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVCdXR0b24odGhpcy5fZ2V0SWQoKSk7XG4gICAgfSk7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlTGlrZUJ1dHRvbih0aGlzLl9saWtlQnV0dG9uLCB0aGlzLl9nZXRJZCgpKTtcbiAgICB9KTtcbiAgICB0aGlzLl9lbGVtZW50UGljdHVyZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xuICAgIH0pO1xuICB9O1xuXG4gIHRvZ2dsZUxpa2VCdXR0b24obGlrZUJ1dHRvbikge1xuICAgIGxpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZShcImVsZW1lbnRfX2J1dHRvbl9hY3RpdmVcIik7XG4gIH1cblxuICBkaXNwbGF5VG90YWxMaWtlcyh0b3RhbExpa2VzKSB7XG4gICB0aGlzLl9jb3VudGVyLnRleHRDb250ZW50ID1cbiAgICAgIHRvdGFsTGlrZXM7XG4gIH1cblxuICBfaGFuZGxlQ2FyZExpa2VzKCkge1xuICAgIGNvbnN0IGNhcmRMaWtlcyA9IEFycmF5LmZyb20odGhpcy5fbGlrZXMpO1xuICAgIGNhcmRMaWtlcy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICBpZiAoZWxlbWVudC5faWQgPT09IHRoaXMuX3VzZXJJZCkge1xuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19idXR0b25fYWN0aXZlXCIpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkID0gKCkgPT4ge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fYnV0dG9uXCIpO1xuICAgIHRoaXMuX2VsZW1lbnRQaWN0dXJlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3BpY3R1cmVcIik7XG4gICAgdGhpcy5fY291bnRlciA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19idXR0b24tY291bnRlclwiKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX2VsZW1lbnRQaWN0dXJlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fZWxlbWVudFBpY3R1cmUuYWx0ID0gYFBob3RvIG9mICR7dGhpcy5fbmFtZX1gO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19oZWFkZXJcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2NvdW50ZXIudGV4dENvbnRlbnQgPVxuICAgICAgdGhpcy5fbGlrZXNBbW91bnQ7XG4gICAgdGhpcy5faGFuZGxlQ2FyZExpa2VzKCk7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uKCk7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIFxuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5cIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UgPSAoKSA9PiB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5cIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UpO1xuICB9O1xuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGUpID0+IHtcbiAgICAgIGlmIChcbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfb3BlblwiKSB8fFxuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cF9fY2xvc2VcIilcbiAgICAgICkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBfaGFuZGxlRXNjYXBlQ2xvc2UgPSAoZSkgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfTtcbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlU3VibWl0ID0gaGFuZGxlU3VibWl0O1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2J1dHRvblwiKTtcbiAgICB0aGlzLl9pbnB1dHMgPSBbLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKV07XG4gIH1cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBpbnB1dFZhbHVlcztcbiAgfVxuXG4gIGNoYW5nZUJ1dHRvblRleHQodGV4dCA9IFwiU2F2aW5nLi4uXCIpIHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICB0aGlzLmNoYW5nZUJ1dHRvblRleHQoKTtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICB9KTtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xuICAgIHN1cGVyLmNsb3NlKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIHRoaXMuX2VsZW1lbnRCdXR0b24gPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3JcbiAgICApO1xuICB9XG5cbiAgX3Nob3dJbnB1dEVycm9yID0gKGlucHV0RWxlbWVudCkgPT4ge1xuICAgIHRoaXMuX2Vycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xuICAgIHRoaXMuX2Vycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9O1xuXG4gIF9oaWRlSW5wdXRFcnJvciA9IChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIHRoaXMuX2Vycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICAgIHRoaXMuX2Vycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIH07XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eSA9IChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH07XG5cbiAgX2hhc0ludmFsaWRJbnB1dCA9IChpbnB1dHNMaXN0KSA9PiB7XG4gICAgY29uc3QgaW5wdXRzID0gQXJyYXkuZnJvbShpbnB1dHNMaXN0KTtcbiAgICByZXR1cm4gaW5wdXRzLnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH07XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRzTGlzdCkpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2VsZW1lbnRCdXR0b24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2VsZW1lbnRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2VsZW1lbnRCdXR0b24ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG4gICAgfVxuICB9O1xuXG4gIF9zZXRFdmVudExpc3RlbmVycyA9ICgpID0+IHtcbiAgICB0aGlzLl9pbnB1dHNMaXN0ID0gQXJyYXkuZnJvbShcbiAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcilcbiAgICApO1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRzTGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIGVuYWJsZVZhbGlkYXRpb24gPSAoKSA9PiB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9O1xuXG4gIHJlc2V0VmFsaWRhdGlvbiA9ICgpID0+IHtcbiAgICB0aGlzLl9pbnB1dHNMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9KTtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICB9O1xufVxuIiwiaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL0NhcmRcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm1cIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1VzZXJJbmZvXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb25cIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvRnJvbVZhbGlkYXRvclwiO1xuaW1wb3J0IFBvcHVwV2l0aFN1Ym1pdCBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdFwiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL0FwaVwiO1xuaW1wb3J0IHsgcGFnZVNldHRpbmdzIH0gZnJvbSBcIi4uL3NjcmlwdHMvdXRpbHMvY29uc3RhbnRzXCI7XG5cbmNvbnN0IHBsdXNQcm9maWxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19wbHVzXCIpO1xuY29uc3QgcHJvZmlsZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuY29uc3QgZWRpdFByb2ZpbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXRcIik7XG5jb25zdCBjYXJkRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1fc2Vjb25kXCIpO1xuY29uc3QgcHJvZmlsZUlucHV0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0LW5hbWVcIik7XG5jb25zdCBwcm9maWxlSW5wdXRBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0LWFib3V0XCIpO1xuY29uc3QgZWRpdEF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fb3ZlcmxheVwiKTtcbmNvbnN0IGF2YXRhckZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtX2F2YXRhclwiKTtcbmxldCBpZDtcblxuaW1wb3J0IGhlYWRlclNyYyBmcm9tIFwiLi4vaW1hZ2VzL2hlYWRlci5zdmdcIjtcbmNvbnN0IGhlYWRlckltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcm91bmQtdGhlLXVzXCIpO1xuaGVhZGVySW1hZ2Uuc3JjID0gaGVhZGVyU3JjO1xuXG5pbXBvcnQgcHJvZmlsZVNyYyBmcm9tIFwiLi4vaW1hZ2VzL0NvdXN0ZWF1LnBuZ1wiO1xuY29uc3QgcHJvZmlsZUltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9maWxlLWltYWdlXCIpO1xucHJvZmlsZUltYWdlLnNyYyA9IHByb2ZpbGVTcmM7XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTJcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiMzJiOWVmYTAtNmYzNS00YWZlLTk3NWUtZTNhNmJlNDNjZmNiXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59KTtcblxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcblxuY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcbiAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3RvcikpO1xuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpO1xuICAgIGNvbnN0IGZvcm1OYW1lID0gZm9ybUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKTtcbiAgICBmb3JtVmFsaWRhdG9yc1tmb3JtTmFtZV0gPSB2YWxpZGF0b3I7XG4gICAgdmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbiAgfSk7XG59O1xuZW5hYmxlVmFsaWRhdGlvbihwYWdlU2V0dGluZ3MpO1xuXG5jb25zdCBjb25maXJtTW9kYWwgPSBuZXcgUG9wdXBXaXRoU3VibWl0KFwiLnBvcHVwX2NhcmRfcmVtb3ZlclwiKTtcbmNvbmZpcm1Nb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zdCBpbWFnZU1vZGFsID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiLnBvcHVwX2JpZ19pbWFnZVwiKTtcbmltYWdlTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgZWRpdE1vZGFsID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIucG9wdXBfcHJvZmlsZV9hZGRlclwiLCAoZGF0YSkgPT4ge1xuICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTtcbiAgZWRpdE1vZGFsLmNsb3NlKCk7XG59KTtcbmVkaXRNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zdCBhdmF0YXJFZGl0TW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5wb3B1cF9wcm9maWxlX2NoYW5nZXJcIiwgKGRhdGEpID0+IHtcbiAgYXBpXG4gICAgLmNoYW5nZUF2YXRhcihkYXRhLmF2YXRhcilcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICB1c2VySW5mby5zZXRVc2VyQXZhdGFyKHsgYXZhdGFyOiByZXMuYXZhdGFyIH0pO1xuICAgICAgYXZhdGFyRWRpdE1vZGFsLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgICAuZmluYWxseSgodGV4dCkgPT4ge1xuICAgICAgYXZhdGFyRWRpdE1vZGFsLmNoYW5nZUJ1dHRvblRleHQodGV4dCA9IFwiU2F2ZVwiKTtcbiAgICB9KTtcbn0pO1xuYXZhdGFyRWRpdE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmNvbnN0IGFkZENhcmRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLnBvcHVwX2NhcmRfcHVibGlzaGVyXCIsIChkYXRhKSA9PiB7XG4gIGFwaVxuICAgIC5jcmVhdGVDYXJkKHsgbmFtZTogZGF0YS5kZXNjcmlwdGlvbiwgbGluazogZGF0YS5saW5rIH0pXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgc2VjdGlvbi5hZGRJdGVtKGNyZWF0ZU5ld0NhcmQocmVzKSk7XG4gICAgICBhZGRDYXJkTW9kYWwuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxuICAgIC5maW5hbGx5KCh0ZXh0KSA9PiB7XG4gICAgICBhZGRDYXJkTW9kYWwuY2hhbmdlQnV0dG9uVGV4dCh0ZXh0ID0gXCJTYXZlXCIpO1xuICAgIH0pO1xufSk7XG5hZGRDYXJkTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuUHJvbWlzZS5hbGwoW2FwaS5nZXRJbml0aWFsQ2FyZHMoKSwgYXBpLmdldFVzZXJJbmZvKCldKVxuICAudGhlbigoW2NhcmREYXRhLCB1c2VyRGF0YV0pID0+IHtcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7IG5hbWU6IHVzZXJEYXRhLm5hbWUsIGFib3V0OiB1c2VyRGF0YS5hYm91dCB9KTtcbiAgICBzZWN0aW9uLnJlbmRlcihjYXJkRGF0YSk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgfSlcbiAgLmZpbmFsbHkoKHRleHQpID0+IHtcbiAgICBlZGl0TW9kYWwuY2hhbmdlQnV0dG9uVGV4dCh0ZXh0ID0gXCJTYXZlXCIpO1xuICB9KTtcblxuY29uc3Qgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxuICB7XG4gICAgcmVuZGVyZXI6IChjYXJkRGF0YSkgPT4ge1xuICAgICAgc2VjdGlvbi5hZGRJdGVtKGNyZWF0ZU5ld0NhcmQoY2FyZERhdGEpKTtcbiAgICB9LFxuICB9LFxuICBcIi5lbGVtZW50c19fbGlzdFwiXG4pO1xuXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gIHByb2ZpbGVOYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2F1dGhvclwiLFxuICBwcm9maWxlSm9iU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3RleHRcIixcbiAgYXZhdGFyU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2ltYWdlXCIsXG59KTtcblxuZnVuY3Rpb24gY3JlYXRlTmV3Q2FyZChkYXRhKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICB7XG4gICAgICBkYXRhLFxuICAgICAgaGFuZGxlQ2FyZENsaWNrOiAobmFtZSwgbGluaykgPT4ge1xuICAgICAgICBpbWFnZU1vZGFsLm9wZW4obmFtZSwgbGluayk7XG4gICAgICB9LFxuICAgICAgaGFuZGxlRGVsZXRlQnV0dG9uOiAoY2FyZElkKSA9PiB7XG4gICAgICAgIGNvbmZpcm1Nb2RhbC5vcGVuKGNhcmRJZCk7XG4gICAgICAgIGNvbmZpcm1Nb2RhbC5zZXRBY3Rpb24oKCkgPT4ge1xuICAgICAgICAgIGFwaVxuICAgICAgICAgICAgLmRlbGV0ZUNhcmQoY2FyZElkKVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICBjYXJkLnJlbW92ZUNhcmQoKTtcbiAgICAgICAgICAgICAgY29uZmlybU1vZGFsLmNsb3NlKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVMaWtlQnV0dG9uOiAobGlrZUJ1dHRvbiwgaWQpID0+IHtcbiAgICAgICAgaWYgKGxpa2VCdXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKFwiZWxlbWVudF9fYnV0dG9uX2FjdGl2ZVwiKSkge1xuICAgICAgICAgIGFwaVxuICAgICAgICAgICAgLmRpc2xpa2VDYXJkKGlkKVxuICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgICBjYXJkLmRpc3BsYXlUb3RhbExpa2VzKHJlcy5saWtlcy5sZW5ndGgpO1xuICAgICAgICAgICAgICBjYXJkLnRvZ2dsZUxpa2VCdXR0b24obGlrZUJ1dHRvbik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFwaVxuICAgICAgICAgICAgLmxpa2VDYXJkKGlkKVxuICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgICBjYXJkLmRpc3BsYXlUb3RhbExpa2VzKHJlcy5saWtlcy5sZW5ndGgpO1xuICAgICAgICAgICAgICBjYXJkLnRvZ2dsZUxpa2VCdXR0b24obGlrZUJ1dHRvbik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0sXG4gICAgaWQsXG4gICAgXCIjY2FyZC10ZW1wbGF0ZVwiXG4gICk7XG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xufVxuXG5mdW5jdGlvbiBmaWxsUHJvZmlsZUZvcm0oKSB7XG4gIGNvbnN0IHVzZXJEYXRhID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcbiAgcHJvZmlsZUlucHV0TmFtZS52YWx1ZSA9IHVzZXJEYXRhLm5hbWU7XG4gIHByb2ZpbGVJbnB1dEFib3V0LnZhbHVlID0gdXNlckRhdGEuam9iO1xufVxuXG5lZGl0UHJvZmlsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBmb3JtVmFsaWRhdG9yc1twcm9maWxlRm9ybS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpXS5yZXNldFZhbGlkYXRpb24oKTtcbiAgZmlsbFByb2ZpbGVGb3JtKCk7XG4gIGVkaXRNb2RhbC5vcGVuKCk7XG59KTtcblxucGx1c1Byb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZm9ybVZhbGlkYXRvcnNbY2FyZEZvcm0uZ2V0QXR0cmlidXRlKFwibmFtZVwiKV0ucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGFkZENhcmRNb2RhbC5vcGVuKCk7XG59KTtcblxuZWRpdEF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBmb3JtVmFsaWRhdG9yc1thdmF0YXJGb3JtLmdldEF0dHJpYnV0ZShcIm5hbWVcIildLnJlc2V0VmFsaWRhdGlvbigpO1xuICBhdmF0YXJFZGl0TW9kYWwub3BlbigpO1xufSk7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XG4gICAgcmV0dXJuIHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChcIkVycm9yIVwiICsgcmVzLnN0YXR1c1RleHQpO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSlcbiAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKVxuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KVxuICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXG4gIH1cblxuICBjcmVhdGVDYXJkKHsgbmFtZSwgbGluayB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGxpbmssXG4gICAgICB9KSxcbiAgICB9KVxuICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pXG4gICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSlcbiAgfVxuXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pXG4gICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSlcbiAgfVxuXG4gIGRpc2xpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pXG4gICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSlcbiAgfVxuXG4gIGNoYW5nZUF2YXRhcihhdmF0YXIpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXIsXG4gICAgICB9KSxcbiAgICB9KVxuICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXG4gIH1cbn1cbiIsImV4cG9ydCBjb25zdCBwYWdlU2V0dGluZ3MgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIucG9wdXBfX2Zvcm1cIixcbiAgaW5wdXRTZWxlY3RvcjogXCIucG9wdXBfX2lucHV0XCIsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fYnV0dG9uXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbl9kaXNhYmxlZFwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0X3R5cGVfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJwb3B1cF9fZXJyb3JfdmlzaWJsZVwiLFxufTtcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhTdWJtaXQgZXh0ZW5kcyBQb3B1cCB7XG4gIHNldEFjdGlvbihhY3Rpb24pIHtcbiAgICB0aGlzLl9zdWJtaXRIYW5kbGVyID0gYWN0aW9uO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5fc3VibWl0SGFuZGxlcih0aGlzLl9mb3JtKTtcbiAgICB9KTtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIG9wZW4obmFtZSwgbGluaykge1xuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XG4gICAgdGhpcy5fY2FwdGlvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Rlc2NyaXB0aW9uXCIpO1xuICAgIHRoaXMuX2NhcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHRoaXMuX2ltYWdlLmFsdCA9IGBQaG90byBvZiAke25hbWV9YDtcbiAgICB0aGlzLl9pbWFnZS5zcmMgPSBsaW5rO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG5cbiAgYWRkSXRlbShjYXJkKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoY2FyZCk7XG4gIH1cblxuICByZW5kZXIoaXRlbXMpIHtcbiAgICBpdGVtcy5mb3JFYWNoKChkYXRhKSA9PiB7XG4gICAgICB0aGlzLl9yZW5kZXJlcihkYXRhKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IHByb2ZpbGVOYW1lU2VsZWN0b3IsIHByb2ZpbGVKb2JTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX3Byb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlTmFtZVNlbGVjdG9yKTtcbiAgICB0aGlzLl9wcm9maWxlSm9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlSm9iU2VsZWN0b3IpO1xuICAgIHRoaXMuX2F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xuICB9XG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCxcbiAgICAgIGpvYjogdGhpcy5fcHJvZmlsZUpvYi50ZXh0Q29udGVudCxcbiAgICB9O1xuICB9XG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQgfSkge1xuICAgIHRoaXMuX3Byb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9wcm9maWxlSm9iLnRleHRDb250ZW50ID0gYWJvdXQ7XG4gIH1cblxuICBnZXRVc2VyQXZhdGFyKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhdmF0YXI6IHRoaXMuX2F2YXRhci5zcmMsXG4gICAgfTtcbiAgfVxuICBzZXRVc2VyQXZhdGFyKHsgYXZhdGFyIH0pIHtcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gYXZhdGFyO1xuICB9XG59XG4iXSwibmFtZXMiOlsiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJwIiwiQ2FyZCIsImNvbnN0cnVjdG9yIiwidXNlcklkIiwiY2FyZFNlbGVjdG9yIiwiZGF0YSIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUJ1dHRvbiIsImhhbmRsZUxpa2VCdXR0b24iLCJ0aGlzIiwiX2VsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJfY2FyZFNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsInJlbW92ZSIsIl9lbGVtZW50QmluIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVEZWxldGVCdXR0b24iLCJfZ2V0SWQiLCJfbGlrZUJ1dHRvbiIsIl9oYW5kbGVMaWtlQnV0dG9uIiwiX2VsZW1lbnRQaWN0dXJlIiwiX2hhbmRsZUNhcmRDbGljayIsIl9uYW1lIiwiX2xpbmsiLCJfZ2V0VGVtcGxhdGUiLCJfY291bnRlciIsIl9zZXRFdmVudExpc3RlbmVycyIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiX2xpa2VzQW1vdW50IiwiX2hhbmRsZUNhcmRMaWtlcyIsIl9kZWxldGVCdXR0b24iLCJuYW1lIiwibGluayIsIl9pZCIsIl9vd25lciIsIm93bmVyIiwiX3VzZXJJZCIsIl9saWtlcyIsImxpa2VzIiwibGVuZ3RoIiwiY2FyZFRyYXNoQnV0dG9uIiwidG9nZ2xlTGlrZUJ1dHRvbiIsImxpa2VCdXR0b24iLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJkaXNwbGF5VG90YWxMaWtlcyIsInRvdGFsTGlrZXMiLCJBcnJheSIsImZyb20iLCJmb3JFYWNoIiwiZWxlbWVudCIsImFkZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlRXNjYXBlQ2xvc2UiLCJlIiwia2V5IiwiY2xvc2UiLCJvcGVuIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXQiLCJzdXBlciIsIl9oYW5kbGVTdWJtaXQiLCJfZm9ybSIsIl9zdWJtaXRCdXR0b24iLCJfaW5wdXRzIiwicXVlcnlTZWxlY3RvckFsbCIsIl9nZXRJbnB1dFZhbHVlcyIsImlucHV0VmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsImNoYW5nZUJ1dHRvblRleHQiLCJ0ZXh0IiwicHJldmVudERlZmF1bHQiLCJyZXNldCIsIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5ncyIsImZvcm1FbGVtZW50IiwiaW5wdXRFbGVtZW50IiwiX2Vycm9yRWxlbWVudCIsIl9mb3JtRWxlbWVudCIsImlkIiwiX2lucHV0RXJyb3JDbGFzcyIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2Vycm9yQ2xhc3MiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwiaW5wdXRzTGlzdCIsInNvbWUiLCJfaGFzSW52YWxpZElucHV0IiwiX2lucHV0c0xpc3QiLCJfZWxlbWVudEJ1dHRvbiIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiX2lucHV0U2VsZWN0b3IiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiZXZ0IiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJwbHVzUHJvZmlsZUJ1dHRvbiIsInByb2ZpbGVGb3JtIiwiZWRpdFByb2ZpbGVCdXR0b24iLCJjYXJkRm9ybSIsInByb2ZpbGVJbnB1dE5hbWUiLCJwcm9maWxlSW5wdXRBYm91dCIsImVkaXRBdmF0YXJCdXR0b24iLCJhdmF0YXJGb3JtIiwiZ2V0RWxlbWVudEJ5SWQiLCJoZWFkZXJTcmMiLCJwcm9maWxlU3JjIiwiYXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiX2NoZWNrUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzVGV4dCIsImdldEluaXRpYWxDYXJkcyIsImZldGNoIiwidGhlbiIsImdldFVzZXJJbmZvIiwiY3JlYXRlQ2FyZCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGVsZXRlQ2FyZCIsImNhcmRJZCIsImxpa2VDYXJkIiwiZGlzbGlrZUNhcmQiLCJjaGFuZ2VBdmF0YXIiLCJhdmF0YXIiLCJhdXRob3JpemF0aW9uIiwiZm9ybVZhbGlkYXRvcnMiLCJjb25maWciLCJmb3JtU2VsZWN0b3IiLCJ2YWxpZGF0b3IiLCJmb3JtTmFtZSIsImdldEF0dHJpYnV0ZSIsImVuYWJsZVZhbGlkYXRpb24iLCJjb25maXJtTW9kYWwiLCJzZXRBY3Rpb24iLCJhY3Rpb24iLCJfc3VibWl0SGFuZGxlciIsImltYWdlTW9kYWwiLCJfaW1hZ2UiLCJfY2FwdGlvbiIsImVkaXRNb2RhbCIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJhdmF0YXJFZGl0TW9kYWwiLCJzZXRVc2VyQXZhdGFyIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZmluYWxseSIsImFkZENhcmRNb2RhbCIsImRlc2NyaXB0aW9uIiwic2VjdGlvbiIsImFkZEl0ZW0iLCJjcmVhdGVOZXdDYXJkIiwiYWxsIiwiY2FyZERhdGEiLCJ1c2VyRGF0YSIsImFib3V0IiwicmVuZGVyIiwiY29udGFpbmVyU2VsZWN0b3IiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJjYXJkIiwicHJlcGVuZCIsIml0ZW1zIiwicHJvZmlsZU5hbWVTZWxlY3RvciIsInByb2ZpbGVKb2JTZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX3Byb2ZpbGVOYW1lIiwiX3Byb2ZpbGVKb2IiLCJfYXZhdGFyIiwiam9iIiwiZ2V0VXNlckF2YXRhciIsInJlbW92ZUNhcmQiLCJnZW5lcmF0ZUNhcmQiLCJyZXNldFZhbGlkYXRpb24iLCJmaWxsUHJvZmlsZUZvcm0iXSwic291cmNlUm9vdCI6IiJ9