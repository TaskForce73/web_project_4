!function(){"use strict";var e={730:function(e,t,s){e.exports=s.p+"2f8a4cd99a9a7a10b10b.png"},14:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(n){var r=t[n];if(void 0!==r)return r.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,s),i.exports}s.p="",function(){function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,n){let{data:r,handleCardClick:i,handleDeleteButton:o,handleLikeButton:l}=t;e(this,"_getTemplate",(()=>(this._element=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._element))),e(this,"removeCard",(()=>{this._element.remove(),this._element=null})),e(this,"_setEventListeners",(()=>{this._elementBin=this._element.querySelector(".element__bin"),this._elementBin.addEventListener("click",(()=>{this._handleDeleteButton(this._id)})),this._likeButton=this._element.querySelector(".element__button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(this._id)})),this._elementPicture.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))})),e(this,"generateCard",(()=>(this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".element__button"),this._elementPicture=this._element.querySelector(".element__picture"),this._setEventListeners(),this._elementPicture.src=this._link,this._elementPicture.alt="Photo of ".concat(this._name),this._element.querySelector(".element__header").textContent=this._name,this._ownerId!==this._userId&&(this._elementBin=this._element.querySelector(".element__bin").style.display="none"),this._element.querySelector(".element__button-counter").textContent=this._likes.length,this.isLiked&&this.likeCard(this._likes),this._element))),this._name=r.name,this._link=r.link,this._cardSelector=n,this._handleCardClick=i,this._handleDeleteButton=o,this._handleLikeButton=l,this._id=r._id,this._ownerId=r.owner._id,this._userId=s,this._likes=r.likes}likeCard(e){this._likes=e,this._element.querySelector(".element__button-counter").textContent=this._likes.length,this._element.querySelector(".element__button").classList.toggle("element__button_active")}isLiked(){return this._likes.some((e=>e._id===this._userId))}}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e){n(this,"close",(()=>{this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscapeClose)})),n(this,"_handleEscapeClose",(e=>{"Escape"===e.key&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscapeClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_open")||e.target.classList.contains("popup__close"))&&this.close()}))}}class i extends r{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form")}_getInputValues(){const e={};return[...this._form.querySelectorAll(".popup__input")].forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._form.reset(),super.close()}}class o{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}render(){this._items.forEach((e=>{this._renderer(e)}))}}function l(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class a{constructor(e,t){l(this,"_showInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)})),l(this,"_hideInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""})),l(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),l(this,"_hasInvalidInput",(e=>Array.from(e).some((e=>!e.validity.valid)))),l(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputsList)?(this._elementButton.classList.add(this._inactiveButtonClass),this._elementButton.setAttribute("disabled",!0)):(this._elementButton.classList.remove(this._inactiveButtonClass),this._elementButton.removeAttribute("disabled"))})),l(this,"_setEventListeners",(()=>{this._inputsList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._toggleButtonState(),this._inputsList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))})),l(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()})),l(this,"resetValidation",(()=>{this._inputsList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._elementButton=this._formElement.querySelector(this._submitButtonSelector)}}const u={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},_=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch(console.log),c=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return _("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return _("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}createCard(e){let{name:t,link:s}=e;return _("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return _("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers})}likeCard(e){return _("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers})}dislikeCard(e){return _("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"32b9efa0-6f35-4afe-975e-e3a6be43cfcb","Content-Type":"application/json"}});var h=s(14),d=s(730);const p=document.querySelector(".profile__plus"),m=document.querySelector(".popup__form"),f=document.querySelector(".profile__edit"),b=document.querySelector(".popup__form_second"),v=document.querySelector(".elements__list"),E=document.querySelector(".popup__input-name"),C=document.querySelector(".popup__input-about");let S;document.getElementById("around-the-us").src=h,document.getElementById("profile-image").src=d;const k=new a(u,b);k.enableValidation();const y=new a(u,m);y.enableValidation();const L=new class extends r{setAction(e){this._submitHandler=e,this._form=this._popup.querySelector(".popup__form")}_getInputValues(){const e={};return[...this._form.querySelectorAll(".popup__input")].forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}}(".popup_card_remover");L.setEventListeners();const g=new class extends r{open(e,t){const s=this._popup.querySelector(".popup__image");this._popup.querySelector(".popup__description").textContent=e,s.alt="Photo of ".concat(e),s.src=t,super.open()}}(".popup_big_image");g.setEventListeners();const B=new i(".popup_profile_adder",(e=>{w.setUserInfo(e)}));B.setEventListeners();const q=new i(".popup_card_publisher",(e=>{c.createCard({name:e.description,link:e.link}).then((e=>{I(e)}))}));q.setEventListeners();const I=e=>{const s=function(e){const s=new t({data:e,handleCardClick:(e,t)=>{g.open(e,t)},handleDeleteButton:e=>{L.open(),L.setAction((()=>{c.deleteCard(e).then((e=>{console.log("This card was deleted",e),s.removeCard()}))}))},handleLikeButton:e=>{s.isLiked()?c.dislikeCard(e).then((e=>{s.likeCard(e.likes)})):c.likeCard(e).then((e=>{s.likeCard(e.likes)}))}},S,"#card-template");return s.generateCard()}(e);v.prepend(s)};c.getUserInfo().then((e=>{S=e._id,w.setUserInfo({name:e.name,about:e.about})})),c.getInitialCards().then((e=>{console.log("res",e),new o({items:e,renderer:I},".elements__list").render()}));const w=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}}({profileNameSelector:".profile__author",profileJobSelector:".profile__text"});f.addEventListener("click",(()=>{y.resetValidation(m),function(){const e=w.getUserInfo();E.value=e.name,C.value=e.job}(),B.open()})),p.addEventListener("click",(()=>{k.resetValidation(b),q.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,