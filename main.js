!function(){"use strict";var e={730:function(e,t,s){e.exports=s.p+"2f8a4cd99a9a7a10b10b.png"},14:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,s),i.exports}s.p="",function(){class e{constructor(e,t,s){let{data:r,handleCardClick:n,handleDeleteButton:i,handleLikeButton:o}=e;this._name=r.name,this._link=r.link,this._cardSelector=s,this._handleCardClick=n,this._handleDeleteButton=i,this._handleLikeButton=o,this._id=r._id,this._owner=r.owner,this._userId=t,this._likes=r.likes,this._likesAmount=r.likes.length,this.liked=!1}_getTemplate(){return this._element=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._element}removeCard(){this._element.remove(),this._element=null}_getId(){return this._id}_deleteButton(){const e=this._element.querySelector(".element__bin");this._owner._id!==this._userId&&e.remove()}_setEventListeners(){this._elementBin.addEventListener("click",(()=>{this._handleDeleteButton(this._getId())})),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(this._likeButton,this._getId())})),this._elementPicture.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}like(e){e.classList.add("element__button_active"),this._liked=!0}unlike(e){e.classList.remove("element__button_active"),this._liked=!1}displayTotalLikes(e){this._counter.textContent=e}isLiked(){return this._liked}_handleCardLikes(){Array.from(this._likes).forEach((e=>{e._id===this._userId&&this._likeButton.classList.add("element__button_active")}))}generateCard(){return this._element=this._getTemplate(),this._elementBin=this._element.querySelector(".element__bin"),this._likeButton=this._element.querySelector(".element__button"),this._elementPicture=this._element.querySelector(".element__picture"),this._counter=this._element.querySelector(".element__button-counter"),this._setEventListeners(),this._elementPicture.src=this._link,this._elementPicture.alt="Photo of ".concat(this._name),this._element.querySelector(".element__header").textContent=this._name,this._counter.textContent=this._likesAmount,this._handleCardLikes(),this._deleteButton(),this._element}}class t{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscapeClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscapeClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscapeClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_open")||e.target.classList.contains("popup__close"))&&this.close()}))}}class r extends t{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._submitButton=this._popup.querySelector(".popup__button"),this._inputs=[...this._form.querySelectorAll(".popup__input")]}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}changeButtonText(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Saving...";this._submitButton.textContent=e}setEventListeners(){this._form.addEventListener("submit",(e=>{this.changeButtonText(),e.preventDefault(),this._handleSubmit(this._getInputValues())})),super.setEventListeners()}close(){this._form.reset(),super.close()}}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class i{constructor(e,t){n(this,"_showInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)})),n(this,"_hideInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""})),n(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),n(this,"_hasInvalidInput",(e=>Array.from(e).some((e=>!e.validity.valid)))),n(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputsList)?(this._elementButton.classList.add(this._inactiveButtonClass),this._elementButton.setAttribute("disabled",!0)):(this._elementButton.classList.remove(this._inactiveButtonClass),this._elementButton.removeAttribute("disabled"))})),n(this,"_setEventListeners",(()=>{this._inputsList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._toggleButtonState(),this._inputsList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))})),n(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()})),n(this,"resetValidation",(()=>{this._inputsList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._elementButton=this._formElement.querySelector(this._submitButtonSelector)}}var o=s(14),a=s(730);const l=document.querySelector(".profile__plus"),c=document.querySelector(".popup__form"),h=document.querySelector(".profile__edit"),_=document.querySelector(".popup__form_second"),u=document.querySelector(".popup__input-name"),d=document.querySelector(".popup__input-about"),p=document.querySelector(".profile__overlay"),m=document.querySelector(".popup__form_avatar");document.getElementById("around-the-us").src=o,document.getElementById("profile-image").src=a;const f=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}editProfile(e){let{name:t,about:s}=e;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}createCard(e){let{name:t,link:s}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}dislikeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}changeAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"32b9efa0-6f35-4afe-975e-e3a6be43cfcb","Content-Type":"application/json"}}),v={};var b;b={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(b.formSelector)).forEach((e=>{const t=new i(b,e),s=e.getAttribute("name");v[s]=t,t.enableValidation()}));const k=new class extends t{setAction(e){this._submitHandler=e}setEventListeners(){this._form=this._popup.querySelector(".popup__form"),this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._form)})),super.setEventListeners()}}(".popup_card_remover");k.setEventListeners();const g=new class extends t{open(e,t){this._image=this._popup.querySelector(".popup__image"),this._caption=this._popup.querySelector(".popup__description"),this._caption.textContent=e,this._image.alt="Photo of ".concat(e),this._image.src=t,super.open()}}(".popup_big_image");g.setEventListeners();const E=new r(".popup_profile_adder",(e=>{f.editProfile({name:e.name,about:e.about}).then((e=>{C.setUserInfo({name:e.name,about:e.about}),E.close()})).catch((e=>console.log(e))).finally((()=>{E.changeButtonText("Save")}))}));E.setEventListeners();const S=new r(".popup_profile_changer",(e=>{f.changeAvatar(e.avatar).then((e=>{C.setUserAvatar({avatar:e.avatar}),S.close()})).catch((e=>console.log(e))).finally((()=>{S.changeButtonText("Save")}))}));S.setEventListeners();const y=new r(".popup_card_publisher",(e=>{f.createCard({name:e.description,link:e.link}).then((e=>{L.addItem(B(e,e.owner._id)),y.close()})).catch((e=>console.log(e))).finally((()=>{y.changeButtonText("Save")}))}));y.setEventListeners(),Promise.all([f.getInitialCards(),f.getUserInfo()]).then((e=>{let[t,s]=e;C.setUserInfo({name:s.name,about:s.about}),L.render(t)})).catch((e=>{console.log(e)}));const L=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}render(e){e.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{L.addItem(B(e))}},".elements__list"),C=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s,avatarSelector:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}getUserAvatar(){return{avatar:this._avatar.src}}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({profileNameSelector:".profile__author",profileJobSelector:".profile__text",avatarSelector:".profile__image"});function B(t,s){const r=new e({data:t,handleCardClick:(e,t)=>{g.open(e,t)},handleDeleteButton:e=>{k.open(e),k.setAction((()=>{f.deleteCard(e).then((()=>{r.removeCard(),k.close()})).catch((e=>console.log(e)))}))},handleLikeButton:(e,t)=>{r.isLiked()?f.dislikeCard(t).then((t=>{r.displayTotalLikes(t.likes.length),r.unlike(e)})).catch((e=>console.log(e))):f.likeCard(t).then((t=>{r.displayTotalLikes(t.likes.length),r.like(e)})).catch((e=>console.log(e)))}},s,"#card-template");return r.generateCard()}h.addEventListener("click",(()=>{v[c.getAttribute("name")].resetValidation(),function(){const e=C.getUserInfo();u.value=e.name,d.value=e.job}(),E.open()})),l.addEventListener("click",(()=>{v[_.getAttribute("name")].resetValidation(),y.open()})),p.addEventListener("click",(()=>{v[m.getAttribute("name")].resetValidation(),S.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,