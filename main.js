!function(){"use strict";var e={730:function(e,t,s){e.exports=s.p+"2f8a4cd99a9a7a10b10b.png"},14:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,s),i.exports}s.p="",function(){class e{constructor(e,t,s){let{data:r,handleCardClick:n,handleDeleteButton:i,handleLikeButton:o}=e;this._name=r.name,this._link=r.link,this._cardSelector=s,this._handleCardClick=n,this._handleDeleteButton=i,this._handleLikeButton=o,this._id=r._id,this._owner=r.owner,this._userId=t,this._likes=r.likes,this._likesAmount=r.likes.length,this.liked=!1}_getTemplate(){return this._element=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._element}removeCard(){this._element.remove(),this._element=null}_getId(){return this._id}_deleteButton(){const e=this._element.querySelector(".element__bin");this._owner._id!==this._userId&&e.remove()}_setEventListeners(){this._elementBin.addEventListener("click",(()=>{this._handleDeleteButton(this._getId())})),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(this._likeButton,this._getId())})),this._elementPicture.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}like(e){e.classList.add("element__button_active"),this._liked=!0}unlike(e){e.classList.remove("element__button_active"),this._liked=!1}displayTotalLikes(e){this._counter.textContent=e}isLiked(){return this._liked}_handleCardLikes(){Array.from(this._likes).forEach((e=>{e._id===this._userId&&this._likeButton.classList.add("element__button_active")}))}generateCard(){return this._element=this._getTemplate(),this._elementBin=this._element.querySelector(".element__bin"),this._likeButton=this._element.querySelector(".element__button"),this._elementPicture=this._element.querySelector(".element__picture"),this._counter=this._element.querySelector(".element__button-counter"),this._setEventListeners(),this._elementPicture.src=this._link,this._elementPicture.alt="Photo of ".concat(this._name),this._element.querySelector(".element__header").textContent=this._name,this._counter.textContent=this._likesAmount,this._handleCardLikes(),this._deleteButton(),this._element}}class t{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscapeClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscapeClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscapeClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_open")||e.target.classList.contains("popup__close"))&&this.close()}))}}class r extends t{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._submitButton=this._popup.querySelector(".popup__button"),this._inputs=[...this._form.querySelectorAll(".popup__input")]}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}changeButtonText(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Saving...";this._submitButton.textContent=e}setEventListeners(){this._form.addEventListener("submit",(e=>{this.changeButtonText(),e.preventDefault(),this._handleSubmit(this._getInputValues())})),super.setEventListeners()}close(){this._form.reset(),super.close()}}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class i{constructor(e,t){n(this,"_showInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)})),n(this,"_hideInputError",(e=>{this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""})),n(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)})),n(this,"_hasInvalidInput",(e=>Array.from(e).some((e=>!e.validity.valid)))),n(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputsList)?(this._elementButton.classList.add(this._inactiveButtonClass),this._elementButton.setAttribute("disabled",!0)):(this._elementButton.classList.remove(this._inactiveButtonClass),this._elementButton.removeAttribute("disabled"))})),n(this,"_setEventListeners",(()=>{this._inputsList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._toggleButtonState(),this._inputsList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))})),n(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()})),n(this,"resetValidation",(()=>{this._inputsList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._elementButton=this._formElement.querySelector(this._submitButtonSelector)}}var o=s(14),a=s(730);const l=document.querySelector(".profile__plus"),c=document.querySelector(".popup__form"),h=document.querySelector(".profile__edit"),_=document.querySelector(".popup__input-name"),u=document.querySelector(".popup__input-about"),d=document.querySelector(".popup__form_second"),p=document.querySelector(".profile__overlay"),m=document.querySelector(".popup__form_avatar");document.getElementById("around-the-us").src=o,document.getElementById("profile-image").src=a;const f=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}editProfile(e){let{name:t,about:s}=e;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}createCard(e){let{name:t,link:s}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}dislikeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}changeAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"32b9efa0-6f35-4afe-975e-e3a6be43cfcb","Content-Type":"application/json"}}),v={};var b;b={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(b.formSelector)).forEach((e=>{const t=new i(b,e),s=e.getAttribute("name");v[s]=t,t.enableValidation()}));const k=new class extends t{setAction(e){this._submitHandler=e}setEventListeners(){this._form=this._popup.querySelector(".popup__form"),this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler(this._form)})),super.setEventListeners()}}(".popup_card_remover");k.setEventListeners();const g=new class extends t{open(e,t){this._image=this._popup.querySelector(".popup__image"),this._caption=this._popup.querySelector(".popup__description"),this._caption.textContent=e,this._image.alt="Photo of ".concat(e),this._image.src=t,super.open()}}(".popup_big_image");g.setEventListeners();const E=new r(".popup_profile_adder",(e=>{f.editProfile({name:e.name,about:e.about}).then((e=>{C.setUserInfo({name:e.name,about:e.about}),E.close()})).catch((e=>console.log(e))).finally((()=>{E.changeButtonText("Save")}))}));E.setEventListeners();const S=new r(".popup_profile_changer",(e=>{f.changeAvatar(e.avatar).then((e=>{C.setUserAvatar({avatar:e.avatar}),S.close()})).catch((e=>console.log(e))).finally((()=>{S.changeButtonText("Save")}))}));S.setEventListeners();const y=new r(".popup_card_publisher",(e=>{f.createCard({name:e.description,link:e.link}).then((e=>{L.addItem(B(e,e.owner._id)),y.close()})).catch((e=>console.log(e))).finally((()=>{y.changeButtonText("Save")}))}));y.setEventListeners(),Promise.all([f.getInitialCards(),f.getUserInfo()]).then((e=>{let[t,s]=e;C.setUserInfo({name:s.name,about:s.about}),L.render(t)})).catch((e=>{console.log(e)}));const L=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}render(e){e.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{L.addItem(B(e))}},".elements__list"),C=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:s,avatarSelector:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}getUserAvatar(){return{avatar:this._avatar.src}}setUserAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({profileNameSelector:".profile__author",profileJobSelector:".profile__text",avatarSelector:".profile__image"});function B(t,s){const r=new e({data:t,handleCardClick:(e,t)=>{g.open(e,t)},handleDeleteButton:e=>{k.open(e),k.setAction((()=>{f.deleteCard(e).then((()=>{r.removeCard(),k.close()})).catch((e=>console.log(e)))}))},handleLikeButton:(e,t)=>{r.isLiked()?f.dislikeCard(t).then((t=>{r.displayTotalLikes(t.likes.length),r.unlike(e)})).catch((e=>console.log(e))):f.likeCard(t).then((t=>{r.displayTotalLikes(t.likes.length),r.like(e)})).catch((e=>console.log(e)))}},s,"#card-template");return r.generateCard()}h.addEventListener("click",(()=>{v[c.getAttribute("name")].resetValidation(),function(){const e=C.getUserInfo();_.value=e.name,u.value=e.job}(),E.open()})),l.addEventListener("click",(()=>{v[d.getAttribute("name")].resetValidation(),y.open()})),p.addEventListener("click",(()=>{v[m.getAttribute("name")].resetValidation(),S.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVN5QyxhQUFhLFNBQVMyQyxrQkFDOUN4QixFQUFhdkgsVUFHZjRELEVBQWlCeEYsaUJBQWlCLFNBQVMsS0FDekMySCxFQUFlbEMsRUFBV3VDLGFBQWEsU0FBUzJDLGtCQUNoRDFCLEVBQWdCckgsVSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzQvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvRnJvbVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihcbiAgICB7IGRhdGEsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQnV0dG9uLCBoYW5kbGVMaWtlQnV0dG9uIH0sXG4gICAgdXNlcklkLFxuICAgIGNhcmRTZWxlY3RvclxuICApIHtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVCdXR0b24gPSBoYW5kbGVEZWxldGVCdXR0b247XG4gICAgdGhpcy5faGFuZGxlTGlrZUJ1dHRvbiA9IGhhbmRsZUxpa2VCdXR0b247XG4gICAgdGhpcy5faWQgPSBkYXRhLl9pZDtcbiAgICB0aGlzLl9vd25lciA9IGRhdGEub3duZXI7XG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgICB0aGlzLl9saWtlc0Ftb3VudCA9IGRhdGEubGlrZXMubGVuZ3RoO1xuICAgIHRoaXMubGlrZWQgPSBmYWxzZTtcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIHJlbW92ZUNhcmQoKSB7XG4gICAgY29uc3QgY2FyZCA9IHRoaXMuX2VsZW1lbnQ7XG4gICAgY2FyZC5yZW1vdmUoKTtcbiAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIF9nZXRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICBfZGVsZXRlQnV0dG9uKCkge1xuICAgIGNvbnN0IGNhcmRUcmFzaEJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19iaW5cIik7XG4gICAgaWYgKHRoaXMuX293bmVyLl9pZCAhPT0gdGhpcy5fdXNlcklkKSB7XG4gICAgICBjYXJkVHJhc2hCdXR0b24ucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2VsZW1lbnRCaW4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUJ1dHRvbih0aGlzLl9nZXRJZCgpKTtcbiAgICB9KTtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKHRoaXMuX2xpa2VCdXR0b24sIHRoaXMuX2dldElkKCkpO1xuICAgIH0pO1xuICAgIHRoaXMuX2VsZW1lbnRQaWN0dXJlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XG4gICAgfSk7XG4gIH1cblxuICBsaWtlKGxpa2VCdXR0b24pIHtcbiAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19idXR0b25fYWN0aXZlXCIpO1xuICAgIHRoaXMuX2xpa2VkID0gdHJ1ZTtcbiAgfVxuXG4gIHVubGlrZShsaWtlQnV0dG9uKSB7XG4gICAgbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiZWxlbWVudF9fYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICB0aGlzLl9saWtlZCA9IGZhbHNlO1xuICB9XG5cbiAgZGlzcGxheVRvdGFsTGlrZXModG90YWxMaWtlcykge1xuICAgIHRoaXMuX2NvdW50ZXIudGV4dENvbnRlbnQgPSB0b3RhbExpa2VzO1xuICB9XG5cbiAgaXNMaWtlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbGlrZWQ7XG4gIH1cblxuICBfaGFuZGxlQ2FyZExpa2VzKCkge1xuICAgIGNvbnN0IGNhcmRMaWtlcyA9IEFycmF5LmZyb20odGhpcy5fbGlrZXMpO1xuICAgIGNhcmRMaWtlcy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICBpZiAoZWxlbWVudC5faWQgPT09IHRoaXMuX3VzZXJJZCkge1xuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlbGVtZW50X19idXR0b25fYWN0aXZlXCIpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnRCaW4gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fYmluXCIpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fYnV0dG9uXCIpO1xuICAgIHRoaXMuX2VsZW1lbnRQaWN0dXJlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3BpY3R1cmVcIik7XG4gICAgdGhpcy5fY291bnRlciA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19idXR0b24tY291bnRlclwiKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX2VsZW1lbnRQaWN0dXJlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fZWxlbWVudFBpY3R1cmUuYWx0ID0gYFBob3RvIG9mICR7dGhpcy5fbmFtZX1gO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19oZWFkZXJcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2NvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlc0Ftb3VudDtcbiAgICB0aGlzLl9oYW5kbGVDYXJkTGlrZXMoKTtcbiAgICB0aGlzLl9kZWxldGVCdXR0b24oKTtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5cIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSAge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY2FwZUNsb3NlKTtcbiAgfTtcblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChlKSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX29wZW5cIikgfHxcbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfX2Nsb3NlXCIpXG4gICAgICApIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgX2hhbmRsZUVzY2FwZUNsb3NlID0gKGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZVN1Ym1pdCkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCA9IGhhbmRsZVN1Ym1pdDtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b25cIik7XG4gICAgdGhpcy5faW5wdXRzID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9faW5wdXRcIildO1xuICB9XG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcbiAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xuICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XG4gIH1cblxuICBjaGFuZ2VCdXR0b25UZXh0KHRleHQgPSBcIlNhdmluZy4uLlwiKSB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGV4dDtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgdGhpcy5jaGFuZ2VCdXR0b25UZXh0KCk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVTdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG4gICAgfSk7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgICBzdXBlci5jbG9zZSgpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9lbGVtZW50QnV0dG9uID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICAgKTtcbiAgfVxuXG4gIF9zaG93SW5wdXRFcnJvciA9IChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIHRoaXMuX2Vycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfTtcblxuICBfaGlkZUlucHV0RXJyb3IgPSAoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxuICAgICk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICB9O1xuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkgPSAoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9O1xuXG4gIF9oYXNJbnZhbGlkSW5wdXQgPSAoaW5wdXRzTGlzdCkgPT4ge1xuICAgIGNvbnN0IGlucHV0cyA9IEFycmF5LmZyb20oaW5wdXRzTGlzdCk7XG4gICAgcmV0dXJuIGlucHV0cy5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xuICAgIH0pO1xuICB9O1xuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSA9ICgpID0+IHtcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuX2lucHV0c0xpc3QpKSB7XG4gICAgICB0aGlzLl9lbGVtZW50QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9lbGVtZW50QnV0dG9uLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIHRydWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9lbGVtZW50QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9lbGVtZW50QnV0dG9uLnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xuICAgIH1cbiAgfTtcblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgdGhpcy5faW5wdXRzTGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgIHRoaXMuX2lucHV0c0xpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBlbmFibGVWYWxpZGF0aW9uID0gKCkgPT4ge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfTtcblxuICByZXNldFZhbGlkYXRpb24gPSAoKSA9PiB7XG4gICAgdGhpcy5faW5wdXRzTGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSk7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgfTtcbn1cbiIsImltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9DYXJkXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZVwiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Vc2VySW5mb1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9TZWN0aW9uXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL0Zyb21WYWxpZGF0b3JcIjtcbmltcG9ydCBQb3B1cFdpdGhTdWJtaXQgZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhTdWJtaXRcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9BcGlcIjtcbmltcG9ydCB7IHBhZ2VTZXR0aW5ncyB9IGZyb20gXCIuLi9zY3JpcHRzL3V0aWxzL2NvbnN0YW50c1wiO1xuXG5jb25zdCBwbHVzUHJvZmlsZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGx1c1wiKTtcbmNvbnN0IHByb2ZpbGVGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbmNvbnN0IGVkaXRQcm9maWxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0XCIpO1xuY29uc3QgcHJvZmlsZUlucHV0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0LW5hbWVcIik7XG5jb25zdCBwcm9maWxlSW5wdXRBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0LWFib3V0XCIpO1xuY29uc3QgY2FyZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtX3NlY29uZFwiKTtcbmNvbnN0IGVkaXRBdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX292ZXJsYXlcIik7XG5jb25zdCBhdmF0YXJGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybV9hdmF0YXJcIik7XG5sZXQgaWQ7XG5cbmltcG9ydCBoZWFkZXJTcmMgZnJvbSBcIi4uL2ltYWdlcy9oZWFkZXIuc3ZnXCI7XG5jb25zdCBoZWFkZXJJbWFnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXJvdW5kLXRoZS11c1wiKTtcbmhlYWRlckltYWdlLnNyYyA9IGhlYWRlclNyYztcblxuaW1wb3J0IHByb2ZpbGVTcmMgZnJvbSBcIi4uL2ltYWdlcy9Db3VzdGVhdS5wbmdcIjtcbmNvbnN0IHByb2ZpbGVJbWFnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvZmlsZS1pbWFnZVwiKTtcbnByb2ZpbGVJbWFnZS5zcmMgPSBwcm9maWxlU3JjO1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcIjMyYjllZmEwLTZmMzUtNGFmZS05NzVlLWUzYTZiZTQzY2ZjYlwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbmNvbnN0IGZvcm1WYWxpZGF0b3JzID0ge307XG5cbmNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAoY29uZmlnKSA9PiB7XG4gIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5mb3JtU2VsZWN0b3IpKTtcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGZvcm1FbGVtZW50KTtcbiAgICBjb25zdCBmb3JtTmFtZSA9IGZvcm1FbGVtZW50LmdldEF0dHJpYnV0ZShcIm5hbWVcIik7XG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybU5hbWVdID0gdmFsaWRhdG9yO1xuICAgIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4gIH0pO1xufTtcbmVuYWJsZVZhbGlkYXRpb24ocGFnZVNldHRpbmdzKTtcblxuY29uc3QgY29uZmlybU1vZGFsID0gbmV3IFBvcHVwV2l0aFN1Ym1pdChcIi5wb3B1cF9jYXJkX3JlbW92ZXJcIik7XG5jb25maXJtTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgaW1hZ2VNb2RhbCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIi5wb3B1cF9iaWdfaW1hZ2VcIik7XG5pbWFnZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmNvbnN0IGVkaXRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLnBvcHVwX3Byb2ZpbGVfYWRkZXJcIiwgKGRhdGEpID0+IHtcbiAgYXBpXG4gICAgLmVkaXRQcm9maWxlKHsgbmFtZTogZGF0YS5uYW1lLCBhYm91dDogZGF0YS5hYm91dCB9KVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHsgbmFtZTogcmVzLm5hbWUsIGFib3V0OiByZXMuYWJvdXQgfSk7XG4gICAgICBlZGl0TW9kYWwuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIGVkaXRNb2RhbC5jaGFuZ2VCdXR0b25UZXh0KFwiU2F2ZVwiKTtcbiAgICB9KTtcbn0pO1xuZWRpdE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmNvbnN0IGF2YXRhckVkaXRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLnBvcHVwX3Byb2ZpbGVfY2hhbmdlclwiLCAoZGF0YSkgPT4ge1xuICBhcGlcbiAgICAuY2hhbmdlQXZhdGFyKGRhdGEuYXZhdGFyKVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIoeyBhdmF0YXI6IHJlcy5hdmF0YXIgfSk7XG4gICAgICBhdmF0YXJFZGl0TW9kYWwuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIGF2YXRhckVkaXRNb2RhbC5jaGFuZ2VCdXR0b25UZXh0KFwiU2F2ZVwiKTtcbiAgICB9KTtcbn0pO1xuYXZhdGFyRWRpdE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmNvbnN0IGFkZENhcmRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLnBvcHVwX2NhcmRfcHVibGlzaGVyXCIsIChkYXRhKSA9PiB7XG4gIGFwaVxuICAgIC5jcmVhdGVDYXJkKHsgbmFtZTogZGF0YS5kZXNjcmlwdGlvbiwgbGluazogZGF0YS5saW5rIH0pXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgc2VjdGlvbi5hZGRJdGVtKGNyZWF0ZU5ld0NhcmQocmVzLCByZXMub3duZXIuX2lkKSk7XG4gICAgICBhZGRDYXJkTW9kYWwuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIGFkZENhcmRNb2RhbC5jaGFuZ2VCdXR0b25UZXh0KFwiU2F2ZVwiKTtcbiAgICB9KTtcbn0pO1xuYWRkQ2FyZE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cblByb21pc2UuYWxsKFthcGkuZ2V0SW5pdGlhbENhcmRzKCksIGFwaS5nZXRVc2VySW5mbygpXSlcbiAgLnRoZW4oKFtjYXJkRGF0YSwgdXNlckRhdGFdKSA9PiB7XG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lOiB1c2VyRGF0YS5uYW1lLCBhYm91dDogdXNlckRhdGEuYWJvdXQgfSk7XG4gICAgc2VjdGlvbi5yZW5kZXIoY2FyZERhdGEpO1xuICB9KVxuICAuY2F0Y2goKGVycikgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gIH0pO1xuXG5jb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXG4gIHtcbiAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XG4gICAgICBzZWN0aW9uLmFkZEl0ZW0oY3JlYXRlTmV3Q2FyZChjYXJkRGF0YSkpO1xuICAgIH0sXG4gIH0sXG4gIFwiLmVsZW1lbnRzX19saXN0XCJcbik7XG5cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgcHJvZmlsZU5hbWVTZWxlY3RvcjogXCIucHJvZmlsZV9fYXV0aG9yXCIsXG4gIHByb2ZpbGVKb2JTZWxlY3RvcjogXCIucHJvZmlsZV9fdGV4dFwiLFxuICBhdmF0YXJTZWxlY3RvcjogXCIucHJvZmlsZV9faW1hZ2VcIixcbn0pO1xuXG5mdW5jdGlvbiBjcmVhdGVOZXdDYXJkKGRhdGEsIGlkKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICB7XG4gICAgICBkYXRhLFxuICAgICAgaGFuZGxlQ2FyZENsaWNrOiAobmFtZSwgbGluaykgPT4ge1xuICAgICAgICBpbWFnZU1vZGFsLm9wZW4obmFtZSwgbGluayk7XG4gICAgICB9LFxuICAgICAgaGFuZGxlRGVsZXRlQnV0dG9uOiAoY2FyZElkKSA9PiB7XG4gICAgICAgIGNvbmZpcm1Nb2RhbC5vcGVuKGNhcmRJZCk7XG4gICAgICAgIGNvbmZpcm1Nb2RhbC5zZXRBY3Rpb24oKCkgPT4ge1xuICAgICAgICAgIGFwaVxuICAgICAgICAgICAgLmRlbGV0ZUNhcmQoY2FyZElkKVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICBjYXJkLnJlbW92ZUNhcmQoKTtcbiAgICAgICAgICAgICAgY29uZmlybU1vZGFsLmNsb3NlKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVMaWtlQnV0dG9uOiAobGlrZUJ1dHRvbiwgaWQpID0+IHtcbiAgICAgICAgaWYgKGNhcmQuaXNMaWtlZCgpKSB7XG4gICAgICAgICAgYXBpXG4gICAgICAgICAgICAuZGlzbGlrZUNhcmQoaWQpXG4gICAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICAgIGNhcmQuZGlzcGxheVRvdGFsTGlrZXMocmVzLmxpa2VzLmxlbmd0aCk7XG4gICAgICAgICAgICAgIGNhcmQudW5saWtlKGxpa2VCdXR0b24pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhcGlcbiAgICAgICAgICAgIC5saWtlQ2FyZChpZClcbiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgICAgY2FyZC5kaXNwbGF5VG90YWxMaWtlcyhyZXMubGlrZXMubGVuZ3RoKTtcbiAgICAgICAgICAgICAgY2FyZC5saWtlKGxpa2VCdXR0b24pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9LFxuICAgIGlkLFxuICAgIFwiI2NhcmQtdGVtcGxhdGVcIlxuICApO1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XG4gIHJldHVybiBjYXJkRWxlbWVudDtcbn1cblxuZnVuY3Rpb24gZmlsbFByb2ZpbGVGb3JtKCkge1xuICBjb25zdCB1c2VyRGF0YSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIHByb2ZpbGVJbnB1dE5hbWUudmFsdWUgPSB1c2VyRGF0YS5uYW1lO1xuICBwcm9maWxlSW5wdXRBYm91dC52YWx1ZSA9IHVzZXJEYXRhLmpvYjtcbn1cblxuZWRpdFByb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZm9ybVZhbGlkYXRvcnNbcHJvZmlsZUZvcm0uZ2V0QXR0cmlidXRlKFwibmFtZVwiKV0ucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGZpbGxQcm9maWxlRm9ybSgpO1xuICBlZGl0TW9kYWwub3BlbigpO1xufSk7XG5cbnBsdXNQcm9maWxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGZvcm1WYWxpZGF0b3JzW2NhcmRGb3JtLmdldEF0dHJpYnV0ZShcIm5hbWVcIildLnJlc2V0VmFsaWRhdGlvbigpO1xuICBhZGRDYXJkTW9kYWwub3BlbigpO1xufSk7XG5cbmVkaXRBdmF0YXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZm9ybVZhbGlkYXRvcnNbYXZhdGFyRm9ybS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpXS5yZXNldFZhbGlkYXRpb24oKTtcbiAgYXZhdGFyRWRpdE1vZGFsLm9wZW4oKTtcbn0pO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcbiAgfVxuXG4gIF9jaGVja1Jlc3BvbnNlKHJlcykge1xuICAgIHJldHVybiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoXCJFcnJvciFcIiArIHJlcy5zdGF0dXNUZXh0KTtcbiAgfVxuXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBlZGl0UHJvZmlsZSh7IG5hbWUsIGFib3V0IH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGFib3V0LFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIGNyZWF0ZUNhcmQoeyBuYW1lLCBsaW5rIH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgbGluayxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBsaWtlQ2FyZChjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgZGlzbGlrZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIGNoYW5nZUF2YXRhcihhdmF0YXIpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXIsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG59XG4iLCJleHBvcnQgY29uc3QgcGFnZVNldHRpbmdzID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIixcbn07XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoU3VibWl0IGV4dGVuZHMgUG9wdXAge1xuICBzZXRBY3Rpb24oYWN0aW9uKSB7XG4gICAgdGhpcy5fc3VibWl0SGFuZGxlciA9IGFjdGlvbjtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIodGhpcy5fZm9ybSk7XG4gICAgfSk7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBvcGVuKG5hbWUsIGxpbmspIHtcbiAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2NhcHRpb24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19kZXNjcmlwdGlvblwiKTtcbiAgICB0aGlzLl9jYXB0aW9uLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBgUGhvdG8gb2YgJHtuYW1lfWA7XG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gbGluaztcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIGFkZEl0ZW0oY2FyZCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGNhcmQpO1xuICB9XG5cbiAgcmVuZGVyKGl0ZW1zKSB7XG4gICAgaXRlbXMuZm9yRWFjaCgoZGF0YSkgPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoZGF0YSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IoeyBwcm9maWxlTmFtZVNlbGVjdG9yLCBwcm9maWxlSm9iU2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yIH0pIHtcbiAgICB0aGlzLl9wcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZU5hbWVTZWxlY3Rvcik7XG4gICAgdGhpcy5fcHJvZmlsZUpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZUpvYlNlbGVjdG9yKTtcbiAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcbiAgfVxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fcHJvZmlsZU5hbWUudGV4dENvbnRlbnQsXG4gICAgICBqb2I6IHRoaXMuX3Byb2ZpbGVKb2IudGV4dENvbnRlbnQsXG4gICAgfTtcbiAgfVxuICBzZXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pIHtcbiAgICB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGhpcy5fcHJvZmlsZUpvYi50ZXh0Q29udGVudCA9IGFib3V0O1xuICB9XG5cbiAgZ2V0VXNlckF2YXRhcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYXZhdGFyOiB0aGlzLl9hdmF0YXIuc3JjLFxuICAgIH07XG4gIH1cbiAgc2V0VXNlckF2YXRhcih7IGF2YXRhciB9KSB7XG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IGF2YXRhcjtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwicCIsIkNhcmQiLCJjb25zdHJ1Y3RvciIsInVzZXJJZCIsImNhcmRTZWxlY3RvciIsImRhdGEiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVEZWxldGVCdXR0b24iLCJoYW5kbGVMaWtlQnV0dG9uIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZURlbGV0ZUJ1dHRvbiIsIl9oYW5kbGVMaWtlQnV0dG9uIiwiX2lkIiwiX293bmVyIiwib3duZXIiLCJfdXNlcklkIiwiX2xpa2VzIiwibGlrZXMiLCJfbGlrZXNBbW91bnQiLCJsZW5ndGgiLCJsaWtlZCIsIl9nZXRUZW1wbGF0ZSIsIl9lbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsInJlbW92ZUNhcmQiLCJyZW1vdmUiLCJfZ2V0SWQiLCJfZGVsZXRlQnV0dG9uIiwiY2FyZFRyYXNoQnV0dG9uIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2VsZW1lbnRCaW4iLCJhZGRFdmVudExpc3RlbmVyIiwiX2xpa2VCdXR0b24iLCJfZWxlbWVudFBpY3R1cmUiLCJsaWtlIiwibGlrZUJ1dHRvbiIsImNsYXNzTGlzdCIsImFkZCIsIl9saWtlZCIsInVubGlrZSIsImRpc3BsYXlUb3RhbExpa2VzIiwidG90YWxMaWtlcyIsIl9jb3VudGVyIiwidGV4dENvbnRlbnQiLCJpc0xpa2VkIiwiX2hhbmRsZUNhcmRMaWtlcyIsIkFycmF5IiwiZnJvbSIsImZvckVhY2giLCJlbGVtZW50IiwiZ2VuZXJhdGVDYXJkIiwic3JjIiwiYWx0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiZSIsImtleSIsImNsb3NlIiwiX3BvcHVwIiwib3BlbiIsIl9oYW5kbGVFc2NhcGVDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzZXRFdmVudExpc3RlbmVycyIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZVN1Ym1pdCIsInN1cGVyIiwiX2hhbmRsZVN1Ym1pdCIsIl9mb3JtIiwiX3N1Ym1pdEJ1dHRvbiIsIl9pbnB1dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwiY2hhbmdlQnV0dG9uVGV4dCIsInRleHQiLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0IiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJfZXJyb3JFbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiaWQiLCJfaW5wdXRFcnJvckNsYXNzIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfZXJyb3JDbGFzcyIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dHNMaXN0Iiwic29tZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfaW5wdXRzTGlzdCIsIl9lbGVtZW50QnV0dG9uIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJfaW5wdXRTZWxlY3RvciIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJldnQiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInBsdXNQcm9maWxlQnV0dG9uIiwicHJvZmlsZUZvcm0iLCJlZGl0UHJvZmlsZUJ1dHRvbiIsInByb2ZpbGVJbnB1dE5hbWUiLCJwcm9maWxlSW5wdXRBYm91dCIsImNhcmRGb3JtIiwiZWRpdEF2YXRhckJ1dHRvbiIsImF2YXRhckZvcm0iLCJnZXRFbGVtZW50QnlJZCIsImhlYWRlclNyYyIsInByb2ZpbGVTcmMiLCJhcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJfY2hlY2tSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXNUZXh0IiwiZ2V0SW5pdGlhbENhcmRzIiwiZmV0Y2giLCJ0aGVuIiwiZ2V0VXNlckluZm8iLCJlZGl0UHJvZmlsZSIsImFib3V0IiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjcmVhdGVDYXJkIiwiZGVsZXRlQ2FyZCIsImNhcmRJZCIsImxpa2VDYXJkIiwiZGlzbGlrZUNhcmQiLCJjaGFuZ2VBdmF0YXIiLCJhdmF0YXIiLCJhdXRob3JpemF0aW9uIiwiZm9ybVZhbGlkYXRvcnMiLCJjb25maWciLCJmb3JtU2VsZWN0b3IiLCJ2YWxpZGF0b3IiLCJmb3JtTmFtZSIsImdldEF0dHJpYnV0ZSIsImVuYWJsZVZhbGlkYXRpb24iLCJjb25maXJtTW9kYWwiLCJzZXRBY3Rpb24iLCJhY3Rpb24iLCJfc3VibWl0SGFuZGxlciIsImltYWdlTW9kYWwiLCJfaW1hZ2UiLCJfY2FwdGlvbiIsImVkaXRNb2RhbCIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJmaW5hbGx5IiwiYXZhdGFyRWRpdE1vZGFsIiwic2V0VXNlckF2YXRhciIsImFkZENhcmRNb2RhbCIsImRlc2NyaXB0aW9uIiwic2VjdGlvbiIsImFkZEl0ZW0iLCJjcmVhdGVOZXdDYXJkIiwiYWxsIiwiY2FyZERhdGEiLCJ1c2VyRGF0YSIsInJlbmRlciIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiY2FyZCIsInByZXBlbmQiLCJpdGVtcyIsInByb2ZpbGVOYW1lU2VsZWN0b3IiLCJwcm9maWxlSm9iU2VsZWN0b3IiLCJhdmF0YXJTZWxlY3RvciIsIl9wcm9maWxlTmFtZSIsIl9wcm9maWxlSm9iIiwiX2F2YXRhciIsImpvYiIsImdldFVzZXJBdmF0YXIiLCJyZXNldFZhbGlkYXRpb24iLCJmaWxsUHJvZmlsZUZvcm0iXSwic291cmNlUm9vdCI6IiJ9